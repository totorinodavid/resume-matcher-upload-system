name: e2e

on:
  push:
    branches: [ main, develop ]
  pull_request:
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Stripe CLI
        run: |
          curl -L https://github.com/stripe/stripe-cli/releases/download/v1.22.6/stripe_1.22.6_linux_x86_64.tar.gz -o stripe.tar.gz
          tar -xzf stripe.tar.gz
          sudo mv stripe /usr/local/bin/stripe
          stripe --version
      - name: Install deps
        run: |
          npm ci
          npm run install:frontend
      - name: Install backend deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r apps/backend/requirements.txt
      - name: Start backend
        run: |
          nohup python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 > backend.log 2>&1 &
        working-directory: apps/backend
      - name: Wait for backend health
        run: |
          for i in {1..30}; do \
            curl -fsS http://localhost:8000/healthz && exit 0 || true; \
            curl -fsS http://localhost:8000/api/v1/health/ping && exit 0 || true; \
            sleep 1; \
          done; \
          echo "Backend did not become healthy"; \
          tail -n 200 apps/backend/backend.log || true; \
          exit 1
      - name: Run Frontend E2E
        working-directory: apps/frontend
        env:
          NEXT_PUBLIC_ENABLE_SW: '0'
          E2E_TEST_MODE: '1'
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '1'
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
          NEXT_PUBLIC_CLERK_JWT_TEMPLATE: ${{ secrets.NEXT_PUBLIC_CLERK_JWT_TEMPLATE }}
          # Clerk
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          E2E_CLERK_EMAIL: ${{ secrets.E2E_CLERK_EMAIL }}
          E2E_CLERK_PASSWORD: ${{ secrets.E2E_CLERK_PASSWORD }}
          # Stripe
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          NEXT_PUBLIC_STRIPE_PRICE_SMALL: ${{ secrets.NEXT_PUBLIC_STRIPE_PRICE_SMALL }}
          NEXT_PUBLIC_STRIPE_PRICE_MEDIUM: ${{ secrets.NEXT_PUBLIC_STRIPE_PRICE_MEDIUM }}
          NEXT_PUBLIC_STRIPE_PRICE_LARGE: ${{ secrets.NEXT_PUBLIC_STRIPE_PRICE_LARGE }}
        run: |
          npx playwright install --with-deps chromium
          npx playwright test -c playwright.config.ts --project=strict-chromium
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/frontend/playwright-report
          if-no-files-found: ignore
      - name: Upload Playwright traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: apps/frontend/test-results
          if-no-files-found: ignore
