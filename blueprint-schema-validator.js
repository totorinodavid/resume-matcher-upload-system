#!/usr/bin/env node

// RENDER BLUEPRINT SCHEMA VALIDATOR
// Validates render.yaml against official Render Blueprint specification

console.log('üîß RENDER BLUEPRINT SCHEMA VALIDATION');
console.log('====================================');
console.log('');

console.log('‚ùå GEFUNDENER FEHLER:');
console.log('   Field: instanceCount');
console.log('   Problem: Nicht Teil der Blueprint Service Schema');
console.log('   L√∂sung: Field entfernt');
console.log('');

console.log('‚úÖ KORREKTE BLUEPRINT FIELDS:');
console.log('   - type: web');
console.log('   - name: resume-matcher-clean');
console.log('   - runtime: node');
console.log('   - rootDir: apps/backend-clean');
console.log('   - buildCommand: npm ci && npm run build');
console.log('   - startCommand: npm start');
console.log('   - healthCheckPath: /api/health');
console.log('   - autoDeploy: true');
console.log('   - disk: (persistent storage config)');
console.log('   - envVars: (environment variables)');
console.log('');

console.log('üìã RENDER BLUEPRINT SERVICE SCHEMA:');
console.log('==================================');
console.log('Required Fields:');
console.log('  ‚úì type: "web"');
console.log('  ‚úì name: string');
console.log('  ‚úì runtime: "node"');
console.log('');
console.log('Optional Fields:');
console.log('  ‚úì rootDir: string');
console.log('  ‚úì buildCommand: string');
console.log('  ‚úì startCommand: string');
console.log('  ‚úì healthCheckPath: string');
console.log('  ‚úì autoDeploy: boolean');
console.log('  ‚úì disk: object');
console.log('  ‚úì envVars: array');
console.log('');
console.log('‚ùå NOT SUPPORTED in Blueprint:');
console.log('  ‚ùå instanceCount (use scaling in dashboard)');
console.log('  ‚ùå region (auto-selected)');
console.log('  ‚ùå plan (use dashboard configuration)');
console.log('');

console.log('üéØ KORRIGIERTE RENDER.YAML:');
console.log('===========================');
console.log(`
services:
  - type: web
    name: resume-matcher-clean
    runtime: node
    rootDir: apps/backend-clean
    buildCommand: npm ci && npm run build
    startCommand: npm start
    healthCheckPath: /api/health
    autoDeploy: true
    disk:
      name: ats-data
      mountPath: /opt/render/project/src/uploads
      sizeGB: 10
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: resume-matcher-db
          property: connectionString
      - key: ADMIN_PASSWORD
        sync: false
      - key: UPLOAD_DIR
        value: /opt/render/project/src/uploads

databases:
  - name: resume-matcher-db
    databaseName: resume_matcher_db
    user: resume_user
`);

console.log('‚úÖ BLUEPRINT SCHEMA VALIDATION ERFOLGREICH!');
console.log('==========================================');
console.log('üéâ render.yaml ist jetzt Blueprint-kompatibel!');
console.log('üìã Bereit f√ºr Dashboard Deployment!');
console.log('üåê N√§chster Schritt: https://dashboard.render.com/blueprints');
