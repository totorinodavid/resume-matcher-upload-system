// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(cuid())
  email            String             @unique
  name             String?
  credits          Int                @default(0)
  
  // Migration tracking from Python Resume Matcher
  legacyUserId     String?            @unique
  migratedAt       DateTime?
  
  // Stripe integration
  stripeCustomerId String?            @unique
  
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  
  transactions     CreditTransaction[]

  @@map("users")
}

model CreditTransaction {
  id            String   @id @default(cuid())
  userId        String
  delta         Int      // Can be positive (purchase/gift) or negative (spend)
  reason        String   // "purchase", "spend", "migration_payment", "migration_adjustment"
  
  // Stripe integration
  stripeEventId String?  @unique
  
  // Migration fields from Python Resume Matcher
  legacyTransactionId String? @unique
  migratedFrom        String? // "legacy_payment" | "legacy_transaction" | null
  
  metadata      Json?    // Flexible storage for additional data
  createdAt     DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("credit_transactions")
}

model Price {
  id             String   @id @default(cuid())
  stripePriceId  String   @unique
  creditsPerUnit Int      // How many credits per unit
  priceInCents   Int      // Price in cents (500 = â‚¬5.00)
  currency       String   @default("eur")
  active         Boolean  @default(true)
  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("prices")
}

// Optional: WebhookEvent for debugging Stripe webhooks
model WebhookEvent {
  id              String   @id @default(cuid())
  stripeEventId   String   @unique
  eventType       String
  processed       Boolean  @default(false)
  processingError String?
  metadata        Json?
  
  createdAt       DateTime @default(now())

  @@map("webhook_events")
}
