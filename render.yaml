# Render Blueprint for Resume Matcher backend
# Docs: https://render.com/docs/blueprint-spec

services:
  - name: resume-matcher-backend
    type: web
    runtime: docker

    # Build from the repo's Dockerfile at the root
    dockerfilePath: ./Dockerfile
    dockerContext: .

    # Run Alembic migrations before each deploy
    preDeployCommand: >-
      python -c "import sys; from alembic.config import main; sys.argv=['alembic','-c','/app/apps/backend/alembic.ini','upgrade','head']; raise SystemExit(main())"

    # Start FastAPI via Uvicorn, binding to Render's $PORT
    dockerCommand: >-
      python /app/apps/backend/serve.py

    # Health check for zero-downtime deploys
    healthCheckPath: /healthz

    # Auto-deploy on commits to the linked branch
    autoDeployTrigger: commit

    # Instance size and count (starter ~0.5 vCPU, ~512 MiB RAM)
    plan: starter
    numInstances: 1

    # Environment variables (secrets prompted at first sync; not stored in repo)
    envVars:
      - key: DATABASE_URL
        sync: false  # Provide Neon connection URL with sslmode=require in dashboard when prompted
      - key: ASYNC_DATABASE_URL
        sync: false  # Optional: async URL (postgresql+asyncpg://...&ssl=require); app derives from DATABASE_URL if omitted
      - key: SESSION_SECRET_KEY
        sync: false  # Required by SessionMiddleware; set a long random string in the dashboard
      # Auth (Clerk)
      - key: CLERK_JWT_ISSUER
        sync: false
      - key: CLERK_AUDIENCE
        sync: false
      # Stripe
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      # Stripe priceâ†’credits mapping (either JSON or individual IDs)
      - key: STRIPE_PRICE_TO_CREDITS_JSON
        sync: false
      - key: STRIPE_PRICE_SMALL_ID
        sync: false
      - key: STRIPE_PRICE_SMALL_CREDITS
        value: "100"
      - key: STRIPE_PRICE_MEDIUM_ID
        sync: false
      - key: STRIPE_PRICE_MEDIUM_CREDITS
        value: "500"
      - key: STRIPE_PRICE_LARGE_ID
        sync: false
      - key: STRIPE_PRICE_LARGE_CREDITS
        value: "1500"
      # AI configuration (set according to your provider)
      - key: LLM_PROVIDER
        value: openai
      - key: LL_MODEL
        value: gpt-4o-mini
      - key: LLM_API_KEY
        sync: false  # If using OpenAI (preferred key)
      - key: OPENAI_API_KEY
        sync: false  # Optional fallback; providers read this if LLM_API_KEY is unset
      - key: EMBEDDING_PROVIDER
        value: openai
      - key: EMBEDDING_MODEL
        value: text-embedding-3-small
      - key: EMBEDDING_API_KEY
        sync: false  # If using OpenAI for embeddings
      - key: ENV
        value: production
      - key: LOG_LEVEL
        value: info
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: PYTHONPATH
        value: /app/apps/backend
      - key: ALEMBIC_CONFIG
        value: /app/apps/backend/alembic.ini
      - key: ALLOWED_ORIGINS
        value: '["https://gojob.ing","https://www.gojob.ing","http://localhost:3000"]'
      # Render provides PORT automatically for web services; no need to set explicitly.

# Note on health checks timing: Render currently allows setting only the path via Blueprint.
# Intervals/timeouts are managed by the platform.
