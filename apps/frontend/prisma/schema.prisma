generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String?
  image         String?
  emailVerified DateTime?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            Int     @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       Int      @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Upload {
  id               String   @id @default(uuid())
  userId           String?  @map("user_id")
  kind             String
  originalFilename String   @map("original_filename")
  storageKey       String   @map("storage_key")
  mimeType         String?  @map("mime_type")
  sizeBytes        BigInt?  @map("size_bytes")
  sha256           String?
  scannedOk        Boolean  @default(false) @map("scanned_ok")
  createdAt        DateTime @default(now()) @map("created_at")

  @@index([userId, createdAt(sort: Desc)], map: "idx_upload_user_created")
  @@index([storageKey], map: "idx_upload_storage_key")
  @@map("uploads")
}
